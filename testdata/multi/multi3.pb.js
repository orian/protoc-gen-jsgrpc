// Code generated by protoc-gen-go.
// source: multi/multi3.proto
// DO NOT EDIT!

package multitest

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Multi3_HatType int32

const (
	Multi3_FEDORA Multi3_HatType = 1
	Multi3_FEZ    Multi3_HatType = 2
)

var Multi3_HatType_name = map[int32]string{
	1: "FEDORA",
	2: "FEZ",
}
var Multi3_HatType_value = map[string]int32{
	"FEDORA": 1,
	"FEZ":    2,
}

func (x Multi3_HatType) Enum() *Multi3_HatType {
	p := new(Multi3_HatType)
	*p = x
	return p
}
func (x Multi3_HatType) String() string {
	return proto.EnumName(Multi3_HatType_name, int32(x))
}
func (x *Multi3_HatType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Multi3_HatType_value, data, "Multi3_HatType")
	if err != nil {
		return err
	}
	*x = Multi3_HatType(value)
	return nil
}

type Multi3 struct {
	HatType          *Multi3_HatType `protobuf:"varint,1,opt,name=hat_type,enum=multitest.Multi3_HatType" json:"hat_type,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Multi3) Reset()         { *m = Multi3{} }
func (m *Multi3) String() string { return proto.CompactTextString(m) }
func (*Multi3) ProtoMessage()    {}

func (m *Multi3) GetHatType() Multi3_HatType {
	if m != nil && m.HatType != nil {
		return *m.HatType
	}
	return Multi3_FEDORA
}

func init() {
	proto.RegisterEnum("multitest.Multi3_HatType", Multi3_HatType_name, Multi3_HatType_value)
}
