// Code generated by protoc-gen-jsgrpc.
// source: multi/multi1.proto
// DO NOT EDIT!

/*
Package multitest is a generated protocol buffer package.

It is generated from these files:
	multi/multi1.proto
	multi/multi2.proto
	multi/multi3.proto

It has these top-level messages:
	Multi1
*/
goog.provide('multitest.Multi1');

goog.require('goog.proto2.Message');



/**
 * Message multitest.Multi1.
 * @constructor
 * @extends {goog.proto2.Message}
 * @final
 */
multitest.Multi1 = function () {
  goog.proto2.Message.call(this);
};
goog.inherits(multitest.Multi1, goog.proto2.Message);

/**
 * Sets the value of the multi2 field.
 * @param {multitest.Multi2} value The value.
 */
multitest.Multi1.prototype.setMulti2 = function(value) {
  this.set$Value(1, value);
};

/**
 * Gets the value of the multi2 field.
 * @return {?multitest.Multi2} The value.
 */
multitest.Multi1.prototype.getMulti2 = function() {
  return /** @type {?multitest.Multi2} */ (this.get$Value(1));
};

/**
 * Sets the value of the color field.
 * @param {multitest.Multi2.Color} value The value.
 */
multitest.Multi1.prototype.setColor = function(value) {
  this.set$Value(2, value);
};

/**
 * Gets the value of the color field.
 * @return {?multitest.Multi2.Color} The value.
 */
multitest.Multi1.prototype.getColor = function() {
  return /** @type {?multitest.Multi2.Color} */ (this.get$Value(2));
};

/**
 * Sets the value of the hat_type field.
 * @param {multitest.Multi3.HatType} value The value.
 */
multitest.Multi1.prototype.setHatType = function(value) {
  this.set$Value(3, value);
};

/**
 * Gets the value of the hat_type field.
 * @return {?multitest.Multi3.HatType} The value.
 */
multitest.Multi1.prototype.getHatType = function() {
  return /** @type {?multitest.Multi3.HatType} */ (this.get$Value(3));
};

/** @override */
multitest.Multi1.prototype.getDescriptor = function() {
  if (!multitest.Multi1.descriptor_) {
    // The descriptor is created lazily when we instantiate a new instance.
    var descriptorObj = {
      0: {
        name: 'Multi1',
        fullName: 'multitest.Multi1'
      },
      1: {
        name: 'multi2',
        fieldType: goog.proto2.Message.FieldType.MESSAGE,
        type: multitest.Multi2
      },
      2: {
        name: 'color',
        fieldType: goog.proto2.Message.FieldType.ENUM,
        type: multitest.Multi2.Color
      },
      3: {
        name: 'hat_type',
        fieldType: goog.proto2.Message.FieldType.ENUM,
        type: multitest.Multi3.HatType
      }
    };
    multitest.Multi1.descriptor_ = goog.proto2.Message.createDescriptor(multitest.Multi1, descriptorObj);
  }
  return multitest.Multi1.descriptor_;
};

